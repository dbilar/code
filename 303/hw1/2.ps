%!PS-Adobe-2.0
%%Title: 2.ps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Sun Sep 14 23:40:22 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 482
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (2.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (jonathan,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Sep 14 23:40:22 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
574 280 M
63 0 V
4165 0 R
-63 0 V
stroke
490 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MRshow
1.000 UL
LTb
574 764 M
63 0 V
4165 0 R
-63 0 V
stroke
490 764 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.5)]
] -46.7 MRshow
1.000 UL
LTb
574 1248 M
63 0 V
4165 0 R
-63 0 V
stroke
490 1248 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
1.000 UL
LTb
574 1732 M
63 0 V
4165 0 R
-63 0 V
stroke
490 1732 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.5)]
] -46.7 MRshow
1.000 UL
LTb
574 2216 M
63 0 V
4165 0 R
-63 0 V
stroke
490 2216 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
574 2700 M
63 0 V
4165 0 R
-63 0 V
stroke
490 2700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
574 3184 M
63 0 V
4165 0 R
-63 0 V
stroke
490 3184 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
574 3668 M
63 0 V
4165 0 R
-63 0 V
stroke
490 3668 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MRshow
1.000 UL
LTb
574 4152 M
63 0 V
4165 0 R
-63 0 V
stroke
490 4152 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
574 280 M
0 63 V
0 3809 R
0 -63 V
stroke
574 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-20)]
] -46.7 MCshow
1.000 UL
LTb
1103 280 M
0 63 V
0 3809 R
0 -63 V
stroke
1103 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-15)]
] -46.7 MCshow
1.000 UL
LTb
1631 280 M
0 63 V
0 3809 R
0 -63 V
stroke
1631 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MCshow
1.000 UL
LTb
2160 280 M
0 63 V
0 3809 R
0 -63 V
stroke
2160 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MCshow
1.000 UL
LTb
2688 280 M
0 63 V
0 3809 R
0 -63 V
stroke
2688 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
3217 280 M
0 63 V
0 3809 R
0 -63 V
stroke
3217 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
3745 280 M
0 63 V
0 3809 R
0 -63 V
stroke
3745 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
4274 280 M
0 63 V
0 3809 R
0 -63 V
stroke
4274 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MCshow
1.000 UL
LTb
4802 280 M
0 63 V
0 3809 R
0 -63 V
stroke
4802 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
574 4152 N
574 280 L
4228 0 V
0 3872 V
-4228 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
4151 4019 M
[ [(Helvetica) 140.0 0.0 true true 0 (atan\(y/x\))]
] -46.7 MRshow
LT0
997 1933 Pls
1002 1982 Pls
1007 2030 Pls
1013 2079 Pls
1018 2127 Pls
1023 2175 Pls
1029 2224 Pls
1034 2272 Pls
1039 2321 Pls
1044 2369 Pls
1050 2417 Pls
1055 2466 Pls
1060 2514 Pls
1066 2563 Pls
1071 2611 Pls
1076 2659 Pls
1081 2708 Pls
1087 2756 Pls
1092 2805 Pls
1097 2853 Pls
1103 2901 Pls
1108 2950 Pls
1113 2998 Pls
1118 3047 Pls
1124 3095 Pls
1129 3143 Pls
1134 3192 Pls
1139 3240 Pls
1145 3289 Pls
1150 3337 Pls
1155 3385 Pls
1161 3434 Pls
1166 3482 Pls
1171 3531 Pls
1176 3579 Pls
1182 3627 Pls
1187 3676 Pls
1192 3724 Pls
1198 731 Pls
1203 780 Pls
1208 828 Pls
1213 877 Pls
1219 925 Pls
1224 973 Pls
1229 1022 Pls
1235 1070 Pls
1240 1119 Pls
1245 1167 Pls
1250 1215 Pls
1256 1264 Pls
1261 1312 Pls
1266 1361 Pls
1272 1409 Pls
1277 1457 Pls
1282 1506 Pls
1287 1554 Pls
1293 1603 Pls
1298 1651 Pls
1303 1699 Pls
1309 1748 Pls
1314 1796 Pls
1319 1845 Pls
1324 1893 Pls
1330 1941 Pls
1335 1990 Pls
1340 2038 Pls
1346 2087 Pls
1351 2135 Pls
1356 2183 Pls
1361 2232 Pls
1367 2280 Pls
1372 2329 Pls
1377 2377 Pls
1383 2425 Pls
1388 2474 Pls
1393 2522 Pls
1398 2571 Pls
1404 2619 Pls
1409 2667 Pls
1414 2716 Pls
1420 2764 Pls
1425 2813 Pls
1430 2861 Pls
1435 2909 Pls
1441 2958 Pls
1446 3006 Pls
1451 3055 Pls
1457 3103 Pls
1462 3151 Pls
1467 3200 Pls
1472 3248 Pls
1478 3297 Pls
1483 3345 Pls
1488 3393 Pls
1494 3442 Pls
1499 3490 Pls
1504 3539 Pls
1509 3587 Pls
1515 3635 Pls
1520 3684 Pls
1525 3732 Pls
1531 740 Pls
1536 788 Pls
1541 836 Pls
1546 885 Pls
1552 933 Pls
1557 982 Pls
1562 1030 Pls
1568 1078 Pls
1573 1127 Pls
1578 1175 Pls
1583 1224 Pls
1589 1272 Pls
1594 1320 Pls
1599 1369 Pls
1605 1417 Pls
1610 1466 Pls
1615 1514 Pls
1620 1562 Pls
1626 1611 Pls
1631 1659 Pls
1636 1708 Pls
1642 1756 Pls
1647 1804 Pls
1652 1853 Pls
1657 1901 Pls
1663 1950 Pls
1668 1998 Pls
1673 2046 Pls
1679 2095 Pls
1684 2143 Pls
1689 2192 Pls
1694 2240 Pls
1700 2288 Pls
1705 2337 Pls
1710 2385 Pls
1716 2434 Pls
1721 2482 Pls
1726 2530 Pls
1731 2579 Pls
1737 2627 Pls
1742 2676 Pls
1747 2724 Pls
1753 2772 Pls
1758 2821 Pls
1763 2869 Pls
1768 2918 Pls
1774 2966 Pls
1779 3014 Pls
1784 3063 Pls
1790 3111 Pls
1795 3160 Pls
1800 3208 Pls
1805 3256 Pls
1811 3305 Pls
1816 3353 Pls
1821 3402 Pls
1827 3450 Pls
1832 3498 Pls
1837 3547 Pls
1842 3595 Pls
1848 3644 Pls
1853 3692 Pls
1858 699 Pls
1864 748 Pls
1869 796 Pls
1874 845 Pls
1879 893 Pls
1885 941 Pls
1890 990 Pls
1895 1038 Pls
1901 1087 Pls
1906 1135 Pls
1911 1183 Pls
1916 1232 Pls
1922 1280 Pls
1927 1329 Pls
1932 1377 Pls
1938 1425 Pls
1943 1474 Pls
1948 1522 Pls
1953 1571 Pls
1959 1619 Pls
1964 1667 Pls
1969 1716 Pls
1975 1764 Pls
1980 1813 Pls
1985 1861 Pls
1990 1909 Pls
1996 1958 Pls
2001 2006 Pls
2006 2055 Pls
2012 2103 Pls
2017 2151 Pls
2022 2200 Pls
2027 2248 Pls
2033 2297 Pls
2038 2345 Pls
2043 2393 Pls
2049 2442 Pls
2054 2490 Pls
2059 2539 Pls
2064 2587 Pls
2070 2635 Pls
2075 2684 Pls
2080 2732 Pls
2086 2781 Pls
2091 2829 Pls
2096 2877 Pls
2101 2926 Pls
2107 2974 Pls
2112 3023 Pls
2117 3071 Pls
2123 3119 Pls
2128 3168 Pls
2133 3216 Pls
2138 3265 Pls
2144 3313 Pls
2149 3361 Pls
2154 3410 Pls
2160 3458 Pls
2165 3507 Pls
2170 3555 Pls
2175 3603 Pls
2181 3652 Pls
2186 3700 Pls
2191 707 Pls
2196 756 Pls
2202 804 Pls
2207 853 Pls
2212 901 Pls
2218 949 Pls
2223 998 Pls
2228 1046 Pls
2233 1095 Pls
2239 1143 Pls
2244 1191 Pls
2249 1240 Pls
2255 1288 Pls
2260 1337 Pls
2265 1385 Pls
2270 1433 Pls
2276 1482 Pls
2281 1530 Pls
2286 1579 Pls
2292 1627 Pls
2297 1675 Pls
2302 1724 Pls
2307 1772 Pls
2313 1821 Pls
2318 1869 Pls
2323 1917 Pls
2329 1966 Pls
2334 2014 Pls
2339 2063 Pls
2344 2111 Pls
2350 2159 Pls
2355 2208 Pls
2360 2256 Pls
2366 2305 Pls
2371 2353 Pls
2376 2401 Pls
2381 2450 Pls
2387 2498 Pls
2392 2547 Pls
2397 2595 Pls
2403 2643 Pls
2408 2692 Pls
2413 2740 Pls
2418 2789 Pls
2424 2837 Pls
2429 2885 Pls
2434 2934 Pls
2440 2982 Pls
2445 3031 Pls
2450 3079 Pls
2455 3127 Pls
2461 3176 Pls
2466 3224 Pls
2471 3273 Pls
2477 3321 Pls
2482 3369 Pls
2487 3418 Pls
2492 3466 Pls
2498 3515 Pls
2503 3563 Pls
2508 3611 Pls
2514 3660 Pls
2519 3708 Pls
2524 716 Pls
2529 764 Pls
2535 812 Pls
2540 861 Pls
2545 909 Pls
2551 958 Pls
2556 1006 Pls
2561 1054 Pls
2566 1103 Pls
2572 1151 Pls
2577 1200 Pls
2582 1248 Pls
2588 1296 Pls
2593 1345 Pls
2598 1393 Pls
2603 1442 Pls
2609 1490 Pls
2614 1538 Pls
2619 1587 Pls
2625 1635 Pls
2630 1684 Pls
2635 1732 Pls
2640 1780 Pls
2646 1829 Pls
2651 1877 Pls
2656 1926 Pls
2662 1974 Pls
2667 2022 Pls
2672 2071 Pls
2677 2119 Pls
2683 2168 Pls
2688 2216 Pls
2693 2264 Pls
2699 2313 Pls
2704 2361 Pls
2709 2410 Pls
2714 2458 Pls
2720 2506 Pls
2725 2555 Pls
2730 2603 Pls
2736 2652 Pls
2741 2700 Pls
2746 2748 Pls
2751 2797 Pls
2757 2845 Pls
2762 2894 Pls
2767 2942 Pls
2773 2990 Pls
2778 3039 Pls
2783 3087 Pls
2788 3136 Pls
2794 3184 Pls
2799 3232 Pls
2804 3281 Pls
2810 3329 Pls
2815 3378 Pls
2820 3426 Pls
2825 3474 Pls
2831 3523 Pls
2836 3571 Pls
2841 3620 Pls
2847 3668 Pls
2852 3716 Pls
2857 724 Pls
2862 772 Pls
2868 821 Pls
2873 869 Pls
2878 917 Pls
2884 966 Pls
2889 1014 Pls
2894 1063 Pls
2899 1111 Pls
2905 1159 Pls
2910 1208 Pls
2915 1256 Pls
2921 1305 Pls
2926 1353 Pls
2931 1401 Pls
2936 1450 Pls
2942 1498 Pls
2947 1547 Pls
2952 1595 Pls
2958 1643 Pls
2963 1692 Pls
2968 1740 Pls
2973 1789 Pls
2979 1837 Pls
2984 1885 Pls
2989 1934 Pls
2995 1982 Pls
3000 2031 Pls
3005 2079 Pls
3010 2127 Pls
3016 2176 Pls
3021 2224 Pls
3026 2273 Pls
3032 2321 Pls
3037 2369 Pls
3042 2418 Pls
3047 2466 Pls
3053 2515 Pls
3058 2563 Pls
3063 2611 Pls
3069 2660 Pls
3074 2708 Pls
3079 2757 Pls
3084 2805 Pls
3090 2853 Pls
3095 2902 Pls
3100 2950 Pls
3106 2999 Pls
3111 3047 Pls
3116 3095 Pls
3121 3144 Pls
3127 3192 Pls
3132 3241 Pls
3137 3289 Pls
3143 3337 Pls
3148 3386 Pls
3153 3434 Pls
3158 3483 Pls
3164 3531 Pls
3169 3579 Pls
3174 3628 Pls
3180 3676 Pls
3185 3725 Pls
3190 732 Pls
3195 780 Pls
3201 829 Pls
3206 877 Pls
3211 925 Pls
3217 974 Pls
3222 1022 Pls
3227 1071 Pls
3232 1119 Pls
3238 1167 Pls
3243 1216 Pls
3248 1264 Pls
3253 1313 Pls
3259 1361 Pls
3264 1409 Pls
3269 1458 Pls
3275 1506 Pls
3280 1555 Pls
3285 1603 Pls
3290 1651 Pls
3296 1700 Pls
3301 1748 Pls
3306 1797 Pls
3312 1845 Pls
3317 1893 Pls
3322 1942 Pls
3327 1990 Pls
3333 2039 Pls
3338 2087 Pls
3343 2135 Pls
3349 2184 Pls
3354 2232 Pls
3359 2281 Pls
3364 2329 Pls
3370 2377 Pls
3375 2426 Pls
3380 2474 Pls
3386 2523 Pls
3391 2571 Pls
3396 2619 Pls
3401 2668 Pls
3407 2716 Pls
3412 2765 Pls
3417 2813 Pls
3423 2861 Pls
3428 2910 Pls
3433 2958 Pls
3438 3007 Pls
3444 3055 Pls
3449 3103 Pls
3454 3152 Pls
3460 3200 Pls
3465 3249 Pls
3470 3297 Pls
3475 3345 Pls
3481 3394 Pls
3486 3442 Pls
3491 3491 Pls
3497 3539 Pls
3502 3587 Pls
3507 3636 Pls
3512 3684 Pls
3518 3733 Pls
3523 740 Pls
3528 788 Pls
3534 837 Pls
3539 885 Pls
3544 934 Pls
3549 982 Pls
3555 1030 Pls
3560 1079 Pls
3565 1127 Pls
3571 1176 Pls
3576 1224 Pls
3581 1272 Pls
3586 1321 Pls
3592 1369 Pls
3597 1418 Pls
3602 1466 Pls
3608 1514 Pls
3613 1563 Pls
3618 1611 Pls
3623 1660 Pls
3629 1708 Pls
3634 1756 Pls
3639 1805 Pls
3645 1853 Pls
3650 1902 Pls
3655 1950 Pls
3660 1998 Pls
3666 2047 Pls
3671 2095 Pls
3676 2144 Pls
3682 2192 Pls
3687 2240 Pls
3692 2289 Pls
3697 2337 Pls
3703 2386 Pls
3708 2434 Pls
3713 2482 Pls
3719 2531 Pls
3724 2579 Pls
3729 2628 Pls
3734 2676 Pls
3740 2724 Pls
3745 2773 Pls
3750 2821 Pls
3756 2870 Pls
3761 2918 Pls
3766 2966 Pls
3771 3015 Pls
3777 3063 Pls
3782 3112 Pls
3787 3160 Pls
3793 3208 Pls
3798 3257 Pls
3803 3305 Pls
3808 3354 Pls
3814 3402 Pls
3819 3450 Pls
3824 3499 Pls
3830 3547 Pls
3835 3596 Pls
3840 3644 Pls
3845 3692 Pls
3851 700 Pls
3856 748 Pls
3861 797 Pls
3867 845 Pls
3872 893 Pls
3877 942 Pls
3882 990 Pls
3888 1039 Pls
3893 1087 Pls
3898 1135 Pls
3904 1184 Pls
3909 1232 Pls
3914 1281 Pls
3919 1329 Pls
3925 1377 Pls
3930 1426 Pls
3935 1474 Pls
3941 1523 Pls
3946 1571 Pls
3951 1619 Pls
3956 1668 Pls
3962 1716 Pls
3967 1765 Pls
3972 1813 Pls
3978 1861 Pls
3983 1910 Pls
3988 1958 Pls
3993 2007 Pls
3999 2055 Pls
4004 2103 Pls
4009 2152 Pls
4015 2200 Pls
4020 2249 Pls
4025 2297 Pls
4030 2345 Pls
4036 2394 Pls
4041 2442 Pls
4046 2491 Pls
4052 2539 Pls
4057 2587 Pls
4062 2636 Pls
4067 2684 Pls
4073 2733 Pls
4078 2781 Pls
4083 2829 Pls
4089 2878 Pls
4094 2926 Pls
4099 2975 Pls
4104 3023 Pls
4110 3071 Pls
4115 3120 Pls
4120 3168 Pls
4126 3217 Pls
4131 3265 Pls
4136 3313 Pls
4141 3362 Pls
4147 3410 Pls
4152 3459 Pls
4157 3507 Pls
4163 3555 Pls
4168 3604 Pls
4173 3652 Pls
4178 3701 Pls
4184 708 Pls
4189 756 Pls
4194 805 Pls
4200 853 Pls
4205 901 Pls
4210 950 Pls
4215 998 Pls
4221 1047 Pls
4226 1095 Pls
4231 1143 Pls
4237 1192 Pls
4242 1240 Pls
4247 1289 Pls
4252 1337 Pls
4258 1385 Pls
4263 1434 Pls
4268 1482 Pls
4274 1531 Pls
4279 1579 Pls
4284 1627 Pls
4289 1676 Pls
4295 1724 Pls
4300 1773 Pls
4305 1821 Pls
4310 1869 Pls
4316 1918 Pls
4321 1966 Pls
4326 2015 Pls
4332 2063 Pls
4337 2111 Pls
4342 2160 Pls
4347 2208 Pls
4353 2257 Pls
4358 2305 Pls
4363 2353 Pls
4369 2402 Pls
4374 2450 Pls
4434 4019 Pls
1.000 UL
LTb
574 4152 N
574 280 L
4228 0 V
0 3872 V
-4228 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
